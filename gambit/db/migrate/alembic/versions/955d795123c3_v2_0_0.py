"""v2.0.0

Revision ID: 955d795123c3
Revises: 
Create Date: 2017-08-01 10:42:48.423161

"""
from alembic import op
import sqlalchemy as sa
import gambit.db.sqla


# revision identifiers, used by Alembic.
revision = '955d795123c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genomes',
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('entrez_db', sa.String(), nullable=True),
    sa.Column('entrez_id', sa.Integer(), nullable=True),
    sa.Column('genbank_acc', sa.String(), nullable=True),
    sa.Column('refseq_acc', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_assembled', sa.Boolean(), nullable=True),
    sa.Column('ncbi_taxid', sa.Integer(), nullable=True),
    sa.Column('entrez_summary', midas.db.sqla.JsonString(), nullable=True),
    sa.Column('extra', midas.db.sqla.JsonString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entrez_db', 'entrez_id'),
    sa.UniqueConstraint('genbank_acc'),
    sa.UniqueConstraint('refseq_acc')
    )
    op.create_index(op.f('ix_genomes_key'), 'genomes', ['key'], unique=False)
    op.create_index(op.f('ix_genomes_ncbi_taxid'), 'genomes', ['ncbi_taxid'], unique=False)
    op.create_table('reference_genome_sets',
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('extra', midas.db.sqla.JsonString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', 'version'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_reference_genome_sets_key'), 'reference_genome_sets', ['key'], unique=False)
    op.create_table('signature_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('prefix', sa.String(), nullable=False),
    sa.Column('k', sa.Integer(), nullable=False),
    sa.Column('parameters', midas.db.sqla.JsonString(), nullable=False),
    sa.Column('extra', midas.db.sqla.JsonString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_signature_sets_k'), 'signature_sets', ['k'], unique=False)
    op.create_index(op.f('ix_signature_sets_prefix'), 'signature_sets', ['prefix'], unique=False)
    op.create_table('signatures',
    sa.Column('set_id', sa.Integer(), nullable=False),
    sa.Column('genome_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('dtype_str', sa.String(length=2), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['genome_id'], ['genomes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['set_id'], ['signature_sets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('set_id', 'genome_id')
    )
    op.create_table('taxa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('rank', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('distance_threshold', sa.Float(), nullable=True),
    sa.Column('reference_set_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('ncbi_id', sa.Integer(), nullable=True),
    sa.Column('entrez_data', midas.db.sqla.JsonString(), nullable=True),
    sa.Column('extra', midas.db.sqla.JsonString(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['taxa.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['reference_set_id'], ['reference_genome_sets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_taxa_name'), 'taxa', ['name'], unique=False)
    op.create_index(op.f('ix_taxa_ncbi_id'), 'taxa', ['ncbi_id'], unique=False)
    op.create_index(op.f('ix_taxa_parent_id'), 'taxa', ['parent_id'], unique=False)
    op.create_index(op.f('ix_taxa_rank'), 'taxa', ['rank'], unique=False)
    op.create_index(op.f('ix_taxa_reference_set_id'), 'taxa', ['reference_set_id'], unique=False)
    op.create_table('genome_annotations',
    sa.Column('genome_id', sa.Integer(), nullable=False),
    sa.Column('reference_set_id', sa.Integer(), nullable=False),
    sa.Column('primary_taxon_id', sa.Integer(), nullable=True),
    sa.Column('organism', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['genome_id'], ['genomes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['primary_taxon_id'], ['taxa.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['reference_set_id'], ['reference_genome_sets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('genome_id', 'reference_set_id')
    )
    op.create_index(op.f('ix_genome_annotations_primary_taxon_id'), 'genome_annotations', ['primary_taxon_id'], unique=False)
    op.create_table('annotations_additional_tax_assoc',
    sa.Column('genome_id', sa.Integer(), nullable=False),
    sa.Column('reference_set_id', sa.Integer(), nullable=False),
    sa.Column('taxon_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genome_id', 'reference_set_id'], ['genome_annotations.genome_id', 'genome_annotations.reference_set_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['taxon_id'], ['taxa.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('genome_id', 'reference_set_id', 'taxon_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annotations_additional_tax_assoc')
    op.drop_index(op.f('ix_genome_annotations_primary_taxon_id'), table_name='genome_annotations')
    op.drop_table('genome_annotations')
    op.drop_index(op.f('ix_taxa_reference_set_id'), table_name='taxa')
    op.drop_index(op.f('ix_taxa_rank'), table_name='taxa')
    op.drop_index(op.f('ix_taxa_parent_id'), table_name='taxa')
    op.drop_index(op.f('ix_taxa_ncbi_id'), table_name='taxa')
    op.drop_index(op.f('ix_taxa_name'), table_name='taxa')
    op.drop_table('taxa')
    op.drop_table('signatures')
    op.drop_index(op.f('ix_signature_sets_prefix'), table_name='signature_sets')
    op.drop_index(op.f('ix_signature_sets_k'), table_name='signature_sets')
    op.drop_table('signature_sets')
    op.drop_index(op.f('ix_reference_genome_sets_key'), table_name='reference_genome_sets')
    op.drop_table('reference_genome_sets')
    op.drop_index(op.f('ix_genomes_ncbi_taxid'), table_name='genomes')
    op.drop_index(op.f('ix_genomes_key'), table_name='genomes')
    op.drop_table('genomes')
    # ### end Alembic commands ###
